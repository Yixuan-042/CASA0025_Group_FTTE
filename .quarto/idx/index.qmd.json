{"title":"CO₂ Emission Analysis and Projections in Guangzhou, China","markdown":{"headingText":"CO₂ Emission Analysis and Projections in Guangzhou, China","containsRefs":false,"markdown":"\n## Project Summary \n\n### Problem Statement \n\nAs the world's largest emitter of carbon dioxide (CO2), China faces significant challenges in addressing climate change. With cities contributing over 70% of global energy-related CO2 emissions, understanding urban emission patterns is crucial. We selected Guangzhou as our study area due to its economic significance in the Greater Bay Area, rapid urbanization, and diverse land use patterns. This application explores relationships between nighttime lights, population, land cover, and building characteristics with CO2 emissions to identify key emission drivers and support evidence-based carbon reduction policies in rapidly developing Chinese cities.\n\n### End User \n\nThis application is designed for urban planners, policymakers, and environmental researchers focused on Guangzhou's central districts. These stakeholders need evidence-based tools to understand CO2 emission patterns and their driving factors within the urban core. By providing spatial visualization of emission and identifying relationships between urban characteristics and carbon emissions in central Guangzhou, our tool helps users develop targeted mitigation strategies for high-density areas, evaluate potential impacts of urban redevelopment projects, and monitor progress toward local carbon reduction goals. The interactive interface allows decision-makers to explore complex environmental data specifically for Guangzhou's urban center.\n\n### Data\n\nCO₂ Emissions Data:\nAnnual CO₂ emissions data is sourced from the ODIAC 2023 dataset (ODIAC 2023). Historical emissions from 2017 to 2022 are also included to support temporal trend analysis.\n\nLand Cover Data:\nLand cover classification is generated using Landsat 9 Surface Reflectance imagery and ESA WorldCover 2021 as training labels. A Random Forest model is trained and applied in Google Earth Engine to produce a 30-meter resolution land cover map.\n\nPopulation Data:\nPopulation data is provided by the Chinese Academy of Sciences, offering 1 km × 1 km gridded raster data for China, supporting demographic and spatial distribution analysis.\n\nNighttime Light Data:\nNighttime light intensity for 2023 is processed using monthly VIIRS DNB composites in Google Earth Engine. The data is aggregated to produce a 100-meter resolution raster clipped to the Guangzhou boundary.\n\nBuilding Characteristics Data:\nBuilding data is sourced from Gaode Map’s 3D Map API (Gaode Map 3D), including building height, footprint area, and gross internal area (GIA) for urban morphology analysis.\n\n### Methodology\n\nData Preprocessing: Clip and project CO2 emissions, landcover types, building coverage, population, and nighttime light data in Guangzhou to create uniform raster files.\nModel Construction: Employ Random Forest with CO2 emissions as the dependent variable and the rest of data as independent variables. The model is constructed for the six districts in the central Guangzhou by conducting regression analysis after screening the independent variables by colinearity.\nVisualization and Prediction: Design layers to display CO2 emissions distribution. Use the regression model to simulate urban densification effects, by adjusting land cover proportions to forecast future emissions.\n\n### Interface\n\nThis application provides urban planners and researchers with an intuitive interactive dashboard. Users can switch between thematic layers (population density, night lighting, architectural features, land cover, carbon dioxide emissions) through the drop-down menu and view detailed pixel-level information by clicking on the map. Dynamic charts can visually display the emission trends and spatial distribution of various regions. The prediction module enables users to simulate land cover changes and assess potential CO₂ impacts. The clarity and real-time interactivity of the interface enable decision-makers to explore the complex urban environmental relationships in Guangzhou and support targeted carbon reduction strategies.\n\n## The Application \n\n:::{.column-page}\n\n<iframe src='https://ee-huitingchen1020.projects.earthengine.app/view/co2-emission-analysis-and-projections' width='100%' height='700px'></iframe>\n\n:::\n## How it Works \n\n### Application Overview\n\nThis application is designed for interactive environmental analysis using Google Earth Engine (GEE). It integrates multiple geospatial datasets, builds thematic visualizations, and applies machine learning models to predict CO₂ emissions under various landcover scenarios.\n\n### 1. Data Loading and Preprocessing\n\n#### 1.1 Core Dataset Import\n\nThe first step imports core datasets including district boundaries, population density, nighttime light intensity, building statistics, and CO₂ emission rasters for the years 2017–2023.\n\n```js\nvar districts = ee.FeatureCollection('users/.../GZ_boundaries');\nvar populationFC = ee.FeatureCollection('projects/.../population0422');\nvar ntlFC = ee.FeatureCollection('projects/.../NTL0422');\nvar buildingStats = ee.FeatureCollection('projects/.../BuildingGrid0424');\nvar co2Paths = { 2017: 'users/.../2017co2', ..., 2023: 'users/.../2023co2' };\nMap.centerObject(districts, 9);\n```\nA boundary layer is added to the map, ensuring district outlines remain on top of all visualizations.\n\n#### 1.2 Landcover Classification\n\nLandsat 9 imagery combined with ESA WorldCover data is used to train a Random Forest classifier. \nThe resulting landcover classification is simplified into seven categories to enhance visualization clarity.\n\n```js\nvar composite = landsat9.median().clip(districts);\nvar samples = composite.addBands(esa).sample({ ... });\nvar classifier = ee.Classifier.smileRandomForest(50).train({ ... });\nvar classified = composite.classify(classifier).remap([10,20,...],[0,1,...]);\n```\n\n#### 1.3 CO₂ Emissions Visualization\n\nThe application visualizes CO₂ emissions dynamically across different years. A dropdown menu allows users to switch between annual layers, and charts provide both citywide trends and district-level distributions.\n\n```js\nvar co2Images = years.reduce(function(obj, y) {\n  obj[y] = ee.Image(co2Paths[y]);\n  return obj;\n}, {});\nMap.layers().set(2, ui.Map.Layer(co2Images[2023], visParamsCO2, 'CO₂ Emission'));\n```\n\n### 2. Interactive Thematic Layers and Panels\n\n#### 2.1 Thematic Layers and Interaction\n\nA thematic selector enables users to switch between layers such as population density, nighttime lights, and building characteristics.\nClicking on the map displays real-time attribute values for the selected theme.\n\n```js\nvar visParamsDict = {\n  'Population Density': { image: popMasked, vis: {min: 0, max: 5000, palette: [...]}, units: 'people/km²' },\n  'Nighttime Lights': { ... },\n  ...\n};\nselector.onChange(function(key) { ... });\nMap.onClick(function(coords) { ... });\n```\n\n#### 2.2 Layer and Legend Management\n\nThis section describes how different data layers are managed and visualized within the application, ensuring a seamless interactive experience. A unified legend style is dynamically generated to accompany each thematic layer.\n\n- **Administrative boundary layer:** always on top.\n- **Land cover map:** 7 categories of land based on training outputs\n- **CO₂ emission layer:** default 2023, supports year switching\n- **Other thematic layers:** selector switching, automatic legend refreshing\n- createLegend function generates a unified style legend (supports custom units/colors)\n\n#### 2.3 Interactive Panels\n\n- **The CO₂ panel in the upper right corner contains:**\n  - Year selector\n  - Line chart of city average trends\n  - Bar chart by district (automatically updated by year)\n- **The left synthesized panel contains:**\n  - Theme layer selector\n  - Dynamically updated legend\n  - Pie chart of land cover proportions in 2023\n- **The predict panel contains:**\n  - Select the combination to be simulated\n  - Button for submitting a simulation request \n  - Simulation result display\n- Real-time sampling and display of pixel values and units when clicking on the map.\n\n### 3. Predictive Modeling with Random Forest\n\nThis project uses a Random Forest model to predict CO₂ emissions from urban features. \nUsers select landcover change scenarios (e.g., Built-up to Forest), apply changes, and the model automatically re-predicts CO₂ emissions based on the updated features, showing spatial impacts and emission percentage changes.\nIn order to improve computational efficiency and accuracy, the simulator was pre-programmed with three sets of combinations of changing land types, and the simulation area was focused on the six zones with the highest CO2 emissions.\n\n```js\n// Feature engineering\nvar combo4Features = [\n  'MeanHeight', 'population', 'density', 'BuiCover',\n  'lc_10', 'lc_20', 'lc_30', 'lc_40', 'lc_50', 'lc_60', 'lc_80'\n];\n\n// Restricting the scope of reasoning to the central city\nvar coreDistricts = districts.filter(ee.Filter.inList('ENG_NAME',[\n  'Tianhe', 'Yuexiu', 'Haizhu', 'Liwan', 'Baiyun', 'Huangpu'\n]));\n\n// Training Random Forests\nvar samples = featureImg.sample({\n  region: coreDistricts.geometry(),\n  scale: 1000,\n  numPixels: 2000,\n  seed: 42,\n  geometries: true\n}).filter(ee.Filter.notNull(combo4Features));\n\nvar rf = ee.Classifier.smileRandomForest(100)\n  .setOutputMode('REGRESSION')\n  .train({\n    features: samples,\n    classProperty: 'RASTERVALU',\n    inputProperties: combo4Features\n  });\n\n// Predict raw baseline\nvar baselinePred = featureImg.select(combo4Features).classify(rf);\n\n// Drop-down box for selecting scenarios\nvar scenarioSelect = ui.Select({\n  items: [\n    'Built-up ➔ Greenplace (20%)',\n    'Bare ➔ Built-up (20%)',\n    'Cropland ➔ Forest (50%)',\n  ],\n  style: {\n    stretch: 'horizontal',\n    fontWeight: 'bold',\n    fontSize: '14px'\n  }\n});\n\nvar applyButton = ui.Button({\n  label: 'Apply Change & Predict',\n  style: {stretch: 'horizontal', fontWeight: 'bold'},\n  onClick: function() {\n    var selected = scenarioSelect.getValue();\n    var percentage;\n    var modifiedLandcover = landcoverImg;\n    \n    if (selected === 'Built-up ➔ Greenplace (20%)') {\n      percentage = 0.2;\n      modifiedLandcover = landcoverImg.where(\n        landcoverImg.eq(50).and(ee.Image.random().lt(percentage)),\n        10\n      );\n    }\n    if (selected === 'Bare ➔ Built-up (20%)') {\n      percentage = 0.2;\n      modifiedLandcover = landcoverImg.where(\n        landcoverImg.eq(40).and(ee.Image.random().lt(percentage)),\n        50\n      );\n    }\n    if (selected === 'Cropland ➔ Forest (50%)') {\n      percentage = 0.5;\n      modifiedLandcover = landcoverImg.where(\n        landcoverImg.eq(60).and(ee.Image.random().lt(percentage)),\n        20\n      );\n    }\n```\n---\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"monokai.theme","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.43","book":{"title":"CASA0025 Final Assessment","author":"Group Name","date":"01/01/2024","chapters":["index.qmd"],"repo-actions":["edit"],"downloads":["pdf","epub"],"sharing":["twitter","facebook"],"favicon":"favicon.ico","sidebar":{"logo":"casa_logo.png"}},"theme":{"dark":"darkly","light":"cosmo"},"code-copy":true,"linkcolor":"#34a832"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}